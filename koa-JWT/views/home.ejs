<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta
			name="viewport"
			content="width=device-width, initial-scale=1.0"
		/>
		<title>Document</title>
		<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
		<script>
			//拦截器，
			axios.interceptors.request.use(
				function (config) {
					//携带token
					const token = localStorage.getItem('token');
					config.headers.Authorization = `Bearer ${token}`;
					return config;
				},
				function (error) {
					return Promise.reject(error);
				}
			);

			axios.interceptors.response.use(
				function (response) {
					console.log(response);
					const { authorization } = response.headers;
					//这里是如果有新的token返回（说明这次发请求的没有过期），就重新设置
					//如果过期了，后端会发错误码，前端处理重定向登录
					authorization && localStorage.setItem('token', authorization);
					return response;
				},
				function (error) {
					if (error.response.status === 401) {
						localStorage.removeItem('token');
						location.href = '/login';
					}
					return Promise.reject(error);
				}
			);
		</script>
	</head>
	<body>
		<h1>home模版页面</h1>

		<table border="1">
			<thead>
				<tr>
					<th>id</th>
					<th>名字</th>
					<th>年龄</th>
				</tr>
			</thead>
			<tbody></tbody>
		</table>
		<script>
			let tbody = document.querySelector('tbody');

			axios.get('/home/list?page=1&limit=10').then((res) => {
				res = res.data;
				var tbody = document.querySelector('tbody');
				tbody.innerHTML = res
					.map(
						(item) => `
						<tr>
							<td>${item._id}</td>
							<td>${item.username}</td>
							<td>${item.age}</td>
						</tr>`
					)
					.join('');
			});
			//退出登录
			// exit.onclick = () => {
			// 	localStorage.removeItem('token');
			// 	location.href = '/login';
			// };
		</script>
	</body>
</html>
